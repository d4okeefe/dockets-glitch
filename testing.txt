// router.post("/get_dockets", function(req, res) {
//   console.log("app.post running");
//   var docket_user = req.body.docket;
//   var docket_split = docket_user.split("-");
//   var docket_yr = docket_split[0];
//   var docket_nm = docket_split[1];
//   var url = `https://www.supremecourt.gov/docket/docketfiles/html/public/${docket_user}.html`;

//   // INITIALIZE LOCAL VARIABLES
//   var tempyr = docket_yr + "-";
//   var myUrl = "";
//   var promises = [];

//   // get range of docket numbers
//   var i = 0;
//   //for (i = parseInt(docket_nm, 10); i <= parseInt(docket_nm, 10) + 49; i++) {
//   for (i = parseInt(docket_nm, 10); i <= parseInt(docket_nm, 10) + 1; i++) {
//     console.log(i);
//     var dkt = tempyr + i.toString(10);
//     //console.log(dkt + " " + typeof dkt);
//     //console.log(i + ":" + docket_nm);
//     promises.push(
//       axios.get(
//         `https://www.supremecourt.gov/docket/docketfiles/html/public/${dkt}.html`
//       )
//     );
//   }

//   //   axios
//   //     .all(promises)
//   //     .then(results => {
//   //       results.forEach(response => {
//   //         //console.log(response); // THIS WILL PRINT THE WEBPAGE
//   //         var update = utilities.parseResponseData(response);
//   //         //console.log("UPDATE: " + update);
//   //         if (update !== null) {
//   //           var query = { case_name: update.case_name };
//   //           var options = {
//   //             upsert: true,
//   //             new: true,
//   //             setDefaultsOnInsert: true,
//   //             overwrite: true
//   //           };

//   //           Docket.findOneAndUpdate(query, update, options, (error, result) => {
//   //             if (error) console.log("ERROR: " + error);
//   //           });
//   //         }
//   //       });
//   //     })
//   //     .catch(error => {
//   //       console.log(error);
//   //     });

//   // ALTERNATIVE AXIOS
//   const promisesResolved = promises.map(promise =>
//     promise.catch(error => ({ error }))
//   );

//   function checkFailed(then) {
//     return function(responses) {
//       const someFailed = responses.some(response => response.error);

//       if (someFailed) {
//         throw responses;
//       }

//       return then(responses);
//     };
//   }

//   axios
//     .all(promisesResolved)
//     .then(
//       checkFailed(urls => {
//         for (var i = 0; i < urls.length; i++) {
//           console.log("SUCCESS", urls[i]);
//           var update = utilities.parseResponseData(urls[i]);

//           if (update !== null) {
//             var query = { case_name: update.case_name };
//             var options = {
//               upsert: true,
//               new: true,
//               setDefaultsOnInsert: true,
//               overwrite: true
//             };

//             Docket.findOneAndUpdate(query, update, options, (error, result) => {
//               if (error) console.log("ERROR: " + error);
//             });
//           } else {
//             console.log("UPDATE FAILED");
//           }
//         }
//       })
//     )
//     .catch(err => {
//       console.log("FAIL", err);
//     });

//   // ALTERNATIVE AXIOS
//   //   const promisesResolved = promises.map(promise =>
//   //     promise.catch(error => ({ error }))
//   //   );

//   //   function checkFailed(then) {
//   //     return function(responses) {
//   //       const someFailed = responses.some(response => response.error);

//   //       if (someFailed) {
//   //         throw responses;
//   //       }

//   //       return then(responses);
//   //     };
//   //   }

//   //   axios
//   //     .all(promisesResolved)
//   //     .then(
//   //       checkFailed(([]) => {
//   //         console.log("SUCCESS");
//   //       })
//   //     )
//   //     .catch(err => {
//   //       console.log("FAIL", err);
//   //     });

//   Docket.find(
//     {},
//     //{ docket_year: { $eq: 19 }, docket_number_short: { $lte: 100 } },

//     null,
//     { sort: { docket_year: 1, docket_number_short: 1 } },
//     function(error, rows) {
//       //console.log(rows);
//       res.render("index", { docket_list: rows });
//     }
//   );
// });





































      <!--h5
          | Show / Hide Columns in Table
        span.btn-group-toggle
          label.btn.btn-sm.btn-light.active
            input#toggle_dkt_yr(type="checkbox" checked="" autocomplete="off") 
            | Docket year
        span.btn-group-toggle
          label.btn.btn-sm.btn-light.active
            input#toggle_date_retrieved(type="checkbox" checked="" autocomplete="off") 
            | Date retrieved
        span.btn-group-toggle
          label.btn.btn-sm.btn-light.active
            input#toggle_lwr_ct_cs_num(type="checkbox" checked="" autocomplete="off") 
            | Lower court case number-->



            if d.proceeding
              td
                h1 
                | Proceedings
                
                table.table.table-striped.table-bordered.table-sm(cellspacing="10" width="100%")
              each p in d.proceeding
                  tr
                    td.td-sm
                    td.td-sm= "Proc " + p.itm_num
                    td.td-sm(colspan=1)= p.date_string
                    td.td-sm(colspan=5)= p.text